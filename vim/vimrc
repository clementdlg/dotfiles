" OPTIONS
"--------
"basics
set nocompatible			        " vi compatibility
set ignorecase                      " ignore case search
set incsearch                       " Incremental search
set cursorline				        " highlight current line
set scrolloff=10			        " keep cursor centered
set clipboard=unnamedplus   		" use system clipboard
set hidden				            " switch between buffers
set mouse=a				            " mouse support
set backspace=indent,eol,start 		" Make backspace more powerful
set noshowmode                      " do not show mode
set path+=**                        " recursive path

" display
set number				            " line numbers
set relativenumber			        " relative line number
set wildmenu				        " list completion for commands
set showcmd				            " display command keystrokes
set wrap                            " wrap lines that are too long
set linebreak                       " wrap lines without cutting words
set signcolumn=yes                  " add a column before line number

" graphics
syntax on                           " syntax highlighting
set termguicolors			        " 24bit color support
colorscheme tokyonight                  " color theme, wildcharm is okay too
set background=dark                 " black background
set lazyredraw				        " do not redraw screen everytime
highlight CursorLineNr guifg=#ff9e64 " color of the current line number

" file specific
set autoread				        " read file changes (outside of vim)
set noswapfile                      " disable swap file
filetype on                         " detect filetype
filetype indent on                  " base indentation filetype
filetype plugin on                  " filetype specific operation
set encoding=utf-8                  " global encoding
set fileencoding=utf-8              " local encoding
set formatoptions+=ro               " add comment header auto

" indent settings
set expandtab               		" Convert tabs to spaces
set tabstop=4               		" Number of spaces tabs count for
set shiftwidth=4            		" Number of spaces to use for autoindent
set softtabstop=4           		" Number of spaces for tab key
set autoindent              		" Copy indent from current line when starting a new line
set smartindent             		" Smart autoindenting for C-like programs

" persistant undo
set undofile                        " Enable persistent undo
set undodir=~/.vim/undo.d           " Set undo directory

"REMAPS
"------
" leader key
let mapleader = " "

" autocomplete symbols
inoremap '    ''<Left>
inoremap (    ()<Left>
inoremap {    {}<Left>

" misc remaps
nnoremap <silent> <Esc>         :nohlsearch<CR>
nnoremap <silent> <leader>rc    :source %<CR>
nnoremap <silent> <leader>rn    :set relativenumber!<CR>

"BUFFER AND WINDOW REMAPS
" buffer navigation
nnoremap <silent> <leader>bn     :bnext<CR>
nnoremap <silent> <leader>bp     :bprevious<CR>
nnoremap <silent> <leader>bd     :bdelete<CR>
nnoremap <silent> <leader>bl     :ls<CR>

" window navigation
nnoremap <silent> <leader>h    :wincmd h<CR>
nnoremap <silent> <leader>j    :wincmd j<CR>
nnoremap <silent> <leader>k    :wincmd k<CR>
nnoremap <silent> <leader>l    :wincmd l<CR>

" new buffer
nnoremap <silent> <leader>n      :enew<CR>
" next buffer in a new split
nnoremap <silent> <leader>vs    :belowright vsplit \| bnext<CR>
nnoremap <silent> <leader>sp    :belowright split \| bnext<CR>

"STATUS LINE
"-----------
set laststatus=2                                    " Always display the status line
set statusline=%#Mode#\ %{toupper(MyMode())}\       " Mode (unabbreviated)
set statusline+=%#Path#\ %F\                        " Full file path
set statusline+=%=%#File#\ [%{&filetype}\]\         " Filetype
set statusline+=%#Percent#\ %p%%                    " Percent of scroll
set statusline+=%#Cursor1#\ %l:%c\                " Line and column numbers

" status colors
highlight Mode gui=bold cterm=bold guifg=black guibg=#7aa2f7
highlight Path guifg=white guibg=#3b4261
highlight File guifg=white guibg=#1c223a
highlight Percent guifg=black guibg=#7aa2f7
highlight Cursor1 gui=bold cterm=bold guifg=black guibg=#7aa2f7

" display modes unabreviated
function! MyMode()
    let l:current_mode = mode()
    return l:current_mode ==# 'n' ? 'NORMAL' :
          \ l:current_mode ==# 'i' ? 'INSERT' :
          \ l:current_mode ==# 'R' ? 'REPLACE' :
          \ l:current_mode ==# 'v' ? 'VISUAL' :
          \ l:current_mode ==# 'V' ? 'V-LINE' :
          \ l:current_mode ==# "\<C-v>" ? 'V-BLOCK' :
          \ l:current_mode ==# 'c' ? 'COMMAND' : 'UNKNOWN'
endfunction

" NETRW (FILE VIEW)
" -----------------
nnoremap <silent> <leader>f    :Lexplore<CR>

let g:netrw_banner = 0          "Remove banner
let g:netrw_liststyle = 3       "File view
let g:netrw_browse_split = 4    "Open file in previous window
let g:netrw_winsize = 20        "Width of netrw
let g:netrw_preview = 1         "Split vertically

"AUTOCOMMADS
"-----------
autocmd InsertEnter,InsertLeave * set cursorline!
